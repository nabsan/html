<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nabsan.github.io</title>
  <subtitle>Blog of developer nabsan.</subtitle>
  <link href="http://nabsan.github.io/" />
  <link type="application/atom+xml" rel="self" href="http://nabsan.github.io/atom.xml" />
  <updated>2014-04-17T22:33:19+09:00</updated>
  <id>http://nabsan.github.io/</id>
  <author>
    <name>Nabsan</name>
    <email>nabsan@ikarosu.net</email>
  </author>
  
  
  <entry>
    <id>http://nabsan.github.io/html/2014/04/R_useful_links</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2014/04/R_useful_links" />
    <title>Useful links for R language</title>
    <updated>2014-04-17T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;h1&gt;Useful links for R.&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://rseek.org/&quot;&gt;Rseek&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;htttp://www.r-project.org/mail.html&quot;&gt;R ML&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/r&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://search.twitter.com/search?q=%23rstats&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.r-bloggers.com&quot;&gt;R-Bloggers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vcasmo.com/user/drewconway&quot;&gt;Video Rchive&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2014/03/show_all_files</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2014/03/show_all_files" />
    <title>Showing all files on OSX Mavericks</title>
    <updated>2014-03-28T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;hr /&gt;

&lt;h1&gt;隠しファイルをすべて表示する&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2&gt;terminal.appを起動し次を入力すること&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt; &amp;gt;defaults write com.apple.finder AppleShowAllFiles TRUE
 &amp;gt;killall Finder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;(後日談)結局は、FALSEに戻して、非表示に戻しました。&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.trankynam.com/xtrafinder/&quot; title=&quot;xtrafinder&quot;&gt;xtrafinder&lt;/a&gt;
を利用するようにしました。&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2014/03/iplogging_via_proxy</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2014/03/iplogging_via_proxy" />
    <title>IP Logging via proxyPass</title>
    <updated>2014-03-26T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;h1&gt;質問&lt;/h1&gt;

&lt;p&gt; ReverseProxyで ProxyPassされたら 接続元のIPがわからないかな？&lt;/p&gt;

&lt;h1&gt;回答&lt;/h1&gt;

&lt;p&gt; 下↓の&quot;■参考&quot;の通り
 proxyPassされたときは、ヘッダに&quot;X-Forwarded-For&quot;が付与されるはずなので、&lt;/p&gt;

&lt;p&gt; httpd.confで&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;　　参考＞LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&amp;gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot; \&quot;%{X-Forwarded-For}i\&quot;&quot; combined
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;みたいにX-Forwarded-Forを記録するようにすればアクセスログ内に記録されるのでそのログを解析対象とすれば、管理はできるのでは？と思います。&lt;/p&gt;

&lt;p&gt; また、その応用としては、&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   SetEnvIf X-Forwarded-For &amp;quot;拒否するIP1&amp;quot; deny_ip
   SetEnvIf X-Forwarded-For &amp;quot;拒否するIP2&amp;quot; deny_ip
　　　
   #deny_ipさんを&amp;quot;拒否&amp;quot;する場合
       &lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
           Order allow,deny
           Allow from all
           Deny from env=deny_ip
           ProxyPass ajp://192.168.20.100:8009/sample-app/
       &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;
   #deny_ipさんを&amp;quot;許可&amp;quot;する場合
       &lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/*/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
           Order deny,allow
           Deny from all
           Allow from env=deny_ip
           ProxyPass ajp://192.168.20.100:8009/sample-app/
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;みたいにアクセス制限/許可も可能です。&lt;/p&gt;

&lt;h1&gt;参考&lt;/h1&gt;

&lt;h2&gt;Apacheのマニュアルより転載&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;&quot;&gt;　&amp;gt;リバースプロキシとして振る舞う時 (例えば、ProxyPass ディレクティブを使う時) 、
   mod_proxy_http は、オリジンサーバに情報を渡すために いくつかのリクエストヘッダを追加します。
　&amp;gt;X-Forwarded-For
　&amp;gt;  クライアントの IP アドレス。
　&amp;gt;X-Forwarded-Host
　&amp;gt;  オリジナルのホスト名。クライアントが Host リクエストヘッダで渡す。
　&amp;gt;X-Forwarded-Server
　&amp;gt;  プロキシサーバのホスト名。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_proxy.html&quot;&gt;http://httpd.apache.org/docs/2.2/mod/mod_proxy.html&lt;/a&gt;」バックスラッシュで無効化できます&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2014/03/D3.js-Cheat</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2014/03/D3.js-Cheat" />
    <title>D3.js Cheat memo</title>
    <updated>2014-03-13T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;h1&gt;d3.jsの概要&lt;/h1&gt;

&lt;p&gt;D3のすごいところは、既存のtool（SVG,HTML,CSS,JavaScript等）を利用し、
データ駆動でDOMを操作し、ビジュアライジングするところです。
DOMを操作するので、その様子はJavaScriptコンソールやエレメントビューなどブラウザの開発者用機能で
容易にデバッグすることも可能です。&lt;/p&gt;

&lt;h2&gt;script定義&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;\&amp;lt;script type=&quot;text/javascript&quot; src=&quot;d3/d3.v3.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;バージョン&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;d3.select(&#39;body&#39;).append(&#39;p&#39;).text(&#39;ver=&#39; + d3.version);
ver=3.0.8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;バインディング(結合）&lt;/h2&gt;

&lt;p&gt;データ視覚化とはデータをビジュアルにマッピング（対応づける）過程の事です。
入力がデータであり、出力がビジュアルプロパティとなります。
D3ではデータの入力値とDOM中の要素とのバインドを行います。
バインドに必要なものは次の２つ。「データ」「DOM要素のセレクション」&lt;/p&gt;

&lt;h3&gt;データ&lt;/h3&gt;

&lt;p&gt;D3は様々な種類のデータの扱いにたけている。
&lt;code&gt;
var dataset = [5,10,15,20,25];
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;セレクション&lt;/h3&gt;

&lt;p&gt;データを結び付ける要素をセレクトします。
d3.select(&quot;body&quot;).selectAll(&quot;p&quot;)
しかし、このコードには落とし穴がある。この時点ではpが存在していない時は、なぜセレクトできる？
謎を解くカギはenter()にあります。D3の最もミステリアスなメソッドです。
d3.select(&#39;body&#39;).selectAll(&quot;p&quot;).data(dataset).enter().append(&#39;p&#39;).text(&#39;新しいグラフ&#39;);
新規にｐが作られ、text&quot;新しいグラフ&quot;が表示される。既に存在したp内のtextは上書きはされない（変化なし）。
selectAll(&quot;p&quot;)の時点では該当するpが存在しない為、メソッドは空のセレクトを行います。この空のセレクトは後にenter()で作られます。
データにバインドされた要素を新規生成する為には、enter()が必要です。このメソッドは最初にDOMを調べ次に受け渡されたdatasetを調べます。
もし、該当するDOMの数よりdatasetの値の個数が多い場合は、新規にプレースホルダ要素※を生成し、そのプレースホルダへの参照をチェインの次の
ステップに渡します。次のステップではその参照に対して作業されます
(※プレースホルダ：最終的な値が決まるまでの間仮確保しておく置場所のこと。)。&lt;/p&gt;

&lt;p&gt;データ(dataset)は順に呼び出され、解析され、DOMにpとしてバインドされました。&lt;/p&gt;

&lt;p&gt;※enter()と逆の働きをするexit()(.remove())という関数があります。dataset要素に比べ挿入先の（ここでいうｐ要素）が多い場合、
※余剰なp要素は削除されます。
※ここまでの話のまとめです。data と要素を結合した場合に返される結果には以下の三通りのセレクションがあります。
※  enter − 新たな役者がステージへ登壇p
※  update − 同じ役者が演じ続ける
※  exit − ステージから退場し去りゆく役者p&lt;/p&gt;

&lt;h2&gt;データの使い方&lt;/h2&gt;

&lt;p&gt;次のようにすると、data()メソッドが大活躍します。チェインしたメソッドの中で、無名関数を使うことができるので、引数dに対して
元のdatasetの値が正しくセットされるようにdata()が働いています。無名関数経由でdatasetの値へアクセスすることができます。
&lt;code&gt;
d3.select(&#39;body&#39;).selectAll(&quot;p&quot;).data(dataset).enter().append(&#39;p&#39;).text(function(d){ return d;});
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;無名関数とは？
次のように名前が無い関数の事。
&lt;code&gt;
function(input_value){
  return output_value;
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;次のように条件分岐などを無名関数内に記述し、応用利用することができます。
&lt;code&gt;
d3.select(&#39;body&#39;).selectAll(&quot;p&quot;).data(dataset).style(&quot;color&quot;,function(d){ if (d&amp;gt;15){ return &quot;red&quot;; }else{return &quot;blue&quot;;} });
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;実際に絵を描画してみる。&lt;/h2&gt;

&lt;p&gt;まず色つきのdivを配置。
&lt;code&gt;
d3.select(&#39;body&#39;).append(&quot;div&quot;).attr(&quot;style&quot;,&quot;display:inline-block; width:20px; height:75px; background-color: teal;&quot;);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;次のようにdatasetをバインドするとそれぞれheightが変わる。
&lt;code&gt;
d3.select(&#39;body&#39;).selectAll(&quot;div&quot;).data(dataset).enter()
.append(&#39;div&#39;)
.attr(&quot;style&quot;,&quot;display:inline-block; width:20px; background-color: teal;&quot;)
.style(&quot;height&quot;,function(d){return d+&quot;px&quot;});
&lt;/code&gt;
高さを調整する。
&lt;code&gt;
d3.select(&#39;body&#39;).selectAll(&quot;div&quot;).data(dataset)
.enter().append(&#39;div&#39;)
.attr(&quot;style&quot;,&quot;display:inline-block; width:20px;margin-right:2px; background-color: teal;&quot;)
.style(&quot;height&quot;,function(d){ var h = d*5; return h+&quot;px&quot;});
&lt;/code&gt;
データを増やしてみる。↓を見るとdatasetバインドのすごさが理解できると思う。データの数が変われば視覚かも変わる。
&quot;&quot;つまりデータが視覚化を制御している&quot;&quot;と言える。すごいよね？
&lt;code&gt;
var dataset = [ 25, 7, 5, 26, 11, 8, 25, 14, 23, 19,14, 11, 22, 29, 11, 13, 12, 17, 18, 10, 24, 18, 25, 9, 3 ];
d3.select(&#39;body&#39;).selectAll(&quot;div&quot;)
.data(dataset).enter().append(&#39;div&#39;)
.attr(&quot;style&quot;,&quot;display:inline-block; width:20px;margin-right:2px; background-color: teal;&quot;)
.style(&quot;height&quot;,function(d){ var h = d*5; return h+&quot;px&quot;});
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;datasetをランダムに作成し、グラフをかいてみる例。&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;var dataset=[];
for ( var i=0; i&amp;lt;25; i++){ var nn = Math.random() * 30; dataset.push(nn);}
d3.select(&#39;body&#39;).selectAll(&quot;div&quot;)
.data(dataset).enter().append(&#39;div&#39;)
.attr(&quot;style&quot;,&quot;display:inline-block; width:20px;margin-right:2px; background-color: teal;&quot;)
.style(&quot;height&quot;,function(d){ var h = d*5; return h+&quot;px&quot;});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;SVGを実際に書いてみる。&lt;/h2&gt;

&lt;p&gt;circlesのattr(&quot;cx&quot;)にて無名関数を渡しているが、この第二引数iはインデックス番号を表す。
インデックス番号は0から始まる整数値であり、datasetがループするごとに増えていく。
ここではcx属性がインデックスにより右に50ずつ増えていくので、結果、円が右方向にずれていくことになる。
&lt;code&gt;
var dataset = [5, 10, 15, 20, 25];
var svg = d3.select(&quot;body&quot;).append(&quot;svg&quot;).attr(&quot;width&quot;, 500).attr(&quot;height&quot;,500);
var circles = svg.selectAll(&quot;circle&quot;).data(dataset).enter().append(&quot;circle&quot;);
circles.attr(&quot;cx&quot;, function(d, i){
return(i*50) + 25;
})
.attr(&quot;cy&quot;,50/2)
.attr(&quot;r&quot;, function(d){
 return d;
});
&lt;/code&gt;
さらに円描画時(circles)に塗りつぶしや線の色情報を渡してみる。
&lt;code&gt;
circles.attr(&quot;cx&quot;, function(d, i){
return(i*50) + 25;
})
.attr(&quot;cy&quot;,50/2)
.attr(&quot;r&quot;, function(d){
 return d;
})
.attr(&quot;fill&quot;,&quot;yellow&quot;)
.attr(&quot;stroke&quot;,&quot;orange&quot;)
.attr(&quot;stroke-width&quot;, function(d){
return d/2;
});
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;データ変数について&lt;/h2&gt;

&lt;p&gt;var hogeで型にかかわらず宣言できる。
配列は[], オブジェクトは{}で宣言が可能。
オブジェクトと配列は組み合わせることが可能である。
このオブジェクトはJSONとも等価であり、
WEBベースAPIでの情報刻刊フォーマットとしても扱われる。
XMLよりも高速かつ簡単にデータ解析が可能である。
JSONが既存のJavascriptオブジェクトの構文の1形式であるのと同様に、
GeoJsonも同じです。GeoJsonは地理データを格納するのに最適化されている。
GeoJsonは当然JavaObjectと等価である。地理空間上の一点（緯度経度）だけでなく、直線やポリゴンシェイプや
その他空間的属性を格納することができます。大量の地理情報を扱う場合はGeoJsonを使う価値があります。
また、類似としてTopoJsonがあります。。これはGeoJsonを拡張したフォーマットであり、ファイルサイズが80-90%縮小します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;※サンプル：経度を緯度よりも先に書くのが規則なので注意！なので呼称としては&quot;緯度経度&quot;とは呼ばず&quot;経度緯度&quot;と呼んだ方が良い。
var geodata = {
   &quot;type&quot;: &quot;FeatureCollection&quot;,
   &quot;features&quot;: [
       {
           &quot;type&quot;: &quot;Feature&quot;,
           &quot;geometry&quot;: {
               &quot;type&quot;: &quot;Point&quot;,
               &quot;coordinates&quot;: [ 150.1282427, -24.471803 ]
           },
           &quot;properties&quot;: {
               &quot;type&quot;: &quot;town&quot;
           }
       }
   ]
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;棒グラフ(SVG)を作成してみる。&lt;/h2&gt;

&lt;p&gt;※座標が、左上原点(0.0)なので、&quot;y&quot;属性を工夫して、左下原点っぽくみせてるところがポイント。
※あと、全体がひしゃげないように値&quot;d&quot;に４を掛け、見栄えを調整している。
※値dが色への表現とつながっている。
&lt;code&gt;
var w = 500;
var h = 100;
var barpadding=1;
var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,
                         11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];
var svg = d3.select(&quot;body&quot;).append(&quot;svg&quot;).attr(&quot;width&quot;, w).attr(&quot;height&quot;,h);
var rects = svg.selectAll(&quot;rect&quot;).data(dataset).enter().append(&quot;rect&quot;).attr(&quot;x&quot;,function(d,i){ return i*(w/dataset.length);}).attr(&quot;y&quot;,0).attr(&quot;width&quot;, w/dataset.length-barpadding).attr(&quot;height&quot;, function(d){return d*4;}).attr(&quot;y&quot;, function(d){ return h-d*4;})
.attr(&quot;fill&quot;, function(d) {
return &quot;rgb(0, 0, &quot;+(d*10) + &quot;)&quot;;});
svg.selectAll(&quot;text&quot;).data(dataset).enter().append(&quot;text&quot;).text(function(d){ return d;})
.attr(&quot;x&quot;, function(d,i){ return i*(w/dataset.length)+(w/dataset.length - barpadding)/2;})
.attr(&quot;y&quot;,function(d){ return h-(d*4)+14;})
.attr(&quot;text-anchor&quot;, &quot;middle&quot;)
.attr(&quot;font-family&quot;, &quot;sans-serif&quot;)
.attr(&quot;font-size&quot;, &quot;11px&quot;)
.attr(&quot;fill&quot;, &quot;white&quot;);
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;散布図をSVGで作成してみる。&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;var dataset = [
                 [5, 20,5], [480, 90,6], [250, 50,7], [100, 33,8], [330, 95,9],
                 [410, 12, 10], [475, 44, 11], [25, 67, 12 ], [85, 21, 13], [220, 88, 14]
             ];
var w = 500
var h = 100
var svg = d3.select(&quot;body&quot;).append(&quot;svg&quot;).attr(&quot;width&quot;, w).attr(&quot;height&quot;, h);
svg.selectAll(&quot;circle&quot;).data(dataset).enter().append(&quot;circle&quot;).attr(&quot;cx&quot;, function(d) { return d[0];}).attr(&quot;cy&quot;, function(d){ return d[1];})
.attr(&quot;r&quot;, function(d){return d[2];});
svg.selectAll(&quot;text&quot;).data(dataset).enter().append(&quot;text&quot;).text(function(d){ return d[0] + &quot;,&quot; + d[1]})
.attr(&quot;x&quot;, function(d){ return d[0];}).attr(&quot;y&quot;, function(d){ return d[1];}).attr(&quot;font-family&quot;, &quot;sans-serif&quot;).attr(&quot;font-size&quot;, &quot;11px&quot;).attr(&quot;fill&quot;, &quot;red&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;スケール&lt;/h2&gt;

&lt;h3&gt;ドメインとレンジ&lt;/h3&gt;

&lt;p&gt;「スケールとは入力ドメインを出力レンジにマッピングする関数の事である」
とスケールの定義をD3作者マイク・ボストック氏は語る。
データを視覚化した場合、必ずしも元の値がデータ表示領域に収まるとは限りません。
キャンバスが狭ければ、描画範囲も限られてきます。
よって、そんな場合は、元の値を適切な値にマップすることでスムーズな視覚化が可能になります。
そのための手段を提供するのがスケール関数です。
D3のスケールは自分で定義して使う関数です。スケール関数を生成後、呼び出して、値を渡すことにより、適切にスケールされた値が
戻ります。スケール関数は好きな数だけ定義して使うことができます。&lt;/p&gt;

&lt;p&gt;D3における「目盛り」とは、「軸」の構成要素の事を表します。よく使うような数値を示す「目盛り」とは違います。
スケールを視覚的に表現したものが「軸」なのです。
スケールとは数学的な関係を示すものであり、それ自体は目に見えるものではありません。
「スケール」と「軸」は互いに関係はしているものの、異なった概念であることを理解しておきましょう。&lt;/p&gt;

&lt;p&gt;スケールには「指数」、「対数」などいろいろな種類がありますが、ここで扱うスケールは、普通の線形スケールです。
線形を理解しておけば、他スケールも簡単に理解できます。&lt;/p&gt;

&lt;p&gt;次のデータセットは、ある果物屋さんで売られているリングの月ごとの売り上げです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var dataset =[ 100,200, 300, 400, 500];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;売り上げは伸びています。数値の伸びを棒グラフで表現するとします。
これまでの解説では棒の値をそのまま長さとして描画してきました。
で、同じ表現を上のdatasetに適用しようとすると、あることが気になりました。
「売り上げがこのまま伸びていき、1800個/月売上げだしたら、描画領域からはみ出す？？」
さて、問題をクリアしたいときは、スケールの出番です。スケールを用いて、リンゴからピクセルに転換します。&lt;/p&gt;

&lt;p&gt;スケールの「入力ドメイン」とは入力データの取りうる範囲のことです。（今回のdatasetでは100〜500）
一方、スケールの「出力レンジ」とは出力値の取りうる範囲のことです。
通常、その値は画面表示ピクセル単位となります。出力レンジを決めるのはあなたです。
最小10ピクセル最大350ピクセルとしたいなら 10〜350が出力レンジとなります。&lt;/p&gt;

&lt;p&gt;この例において、対応を考えると、入力ドメインが100,500, 出力レンジが 10,350なので、
スケールにドメイン100を与えると  レンジ10が返ります。
スケールにドメイン500を与えると、レンジ350が返されます。
スケールに中央値であるドメイン300を与えると、中央値であるレンジ180が返ります。&lt;/p&gt;

&lt;p&gt;入力は「ドメイン！」、出力は「レンジ！」
入力は「ドメイン！」、出力は「レンジ！」
入力は「ドメイン！」、出力は「レンジ！」
これを繰り返して覚えましょう！&lt;/p&gt;

&lt;h3&gt;正規化&lt;/h3&gt;

&lt;p&gt;ここでの正規化とは数学の用語で、&quot;ベクトルにおける正規化&quot; と同じものを指します。
正規化の概念をご存知の方は、線形スケールも理解しやすいと思います。
線形スケールとは正規化に他ならないからです。&lt;/p&gt;

&lt;p&gt;※一般的に、正規化とはデータなどの一定のルールに基づいて変形して利用しやすくすること。
※&quot;ベクトルにおける正規化&quot;とはベクトルの方向は維持しつつ、大きさを１にすること指します。
※この大きさ１であるベクトルの事を単位ベクトルと呼びます。
※例）座標(3,3)のベクトルの大きさは sqrt(3&lt;sup&gt;2&lt;/sup&gt;+3&lt;sup&gt;2&lt;/sup&gt;)=4.24です。
※    正規化する際にはこの大きさ4.24で、元の成分を除算します。N=3/4.24=0.70。
※    成分3は正規化され、0.7となった。&lt;/p&gt;

&lt;p&gt;正規化とは、上の※のとおり、元の数値をその取りうる最小値と最大値にもとづいて
０から１の間に変換する処理の事です。たとえば1年365日の中の310日目は、1年のうちの
およそ0.85と変換されます。&lt;/p&gt;

&lt;p&gt;線形スケールを適用するということは実はD3に数学の正規化処理を実行させているだけなのです。
入力値はドメインに基づいていったん正規化され、次にその正規化された値が出力範囲にスケールされているのです。&lt;/p&gt;

&lt;h3&gt;スケールを実際に作成してみる。&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;var scale = d3.scale.linear().domain([100, 500]).range([10, 350])
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;スケールを用いて散布図をスケールする。&lt;/h3&gt;

&lt;p&gt;実際にサンプル散布図をこれから書くが、
入力ドメインはいくつにしようか。。0,500あたりにしようかとか考えるべきか？
答えはNo。D3にはMinやMax等の関数が用意されてるので、datasetの値から自動でドメインを設定させる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var dataset = [
                 [5, 20,5], [480, 90,6], [250, 50,7], [100, 33,8], [330, 95,9],
                 [410, 12, 10], [475, 44, 11], [25, 67, 12 ], [85, 21, 13], [220, 88, 14],[600,150,4000]
             ];
var w = 500;
var h = 100;
var padding = 30; //margin. この値を設定し左端と右端の余白を作る。range側(出力側)で適用されるので、悪影響はない。
var xscale = d3.scale.linear().domain([0, d3.max(dataset, function(d){return d[0];}) ]).range([padding, w-padding*2]);
var yscale = d3.scale.linear().domain([0, d3.max(dataset, function(d){return d[1];}) ]).range([h-padding, padding]);  //rangeを反転させ、Y軸上下反転
var rscale = d3.scale.linear().domain([0, d3.max(dataset, function(d){return d[2];}) ]).range([2,6]);  //※重要:値がどんなに膨らもうと、最大6px以内に収まる。
var svg = d3.select(&quot;body&quot;).append(&quot;svg&quot;).attr(&quot;width&quot;, w).attr(&quot;height&quot;, h);
svg.selectAll(&quot;circle&quot;).data(dataset).enter().append(&quot;circle&quot;).attr(&quot;cx&quot;, function(d) { return xscale(d[0]);}).attr(&quot;cy&quot;, function(d){ return yscale(d[1]);})
.attr(&quot;r&quot;, function(d){return rscale(d[2]);});
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;svg.selectAll(&quot;text&quot;).data(dataset).enter().append(&quot;text&quot;).text(function(d){ return d[0] + &quot;,&quot; + d[1]})
.attr(&quot;x&quot;, function(d){ return xscale(d[0]);}).attr(&quot;y&quot;, function(d){ return yscale(d[1]);}).attr(&quot;font-family&quot;, &quot;sans-serif&quot;)
.attr(&quot;font-size&quot;, &quot;11px&quot;).attr(&quot;fill&quot;, &quot;red&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;他のメソッド&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;・d3.scale.linear().nice()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;range()内で指定した任意の入力ドメインの両端を一番近い区切りのより数値まで拡張します。
例えば、[0.20147987687960267, 0.9966795523396417]という入力ドメインは、nice()を使うと、[0.2, 1]と区切りよく解釈します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;・d3.scale.linear().rangeRound()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;range()の代わりにrangeRound()を使うことで、スケールの出力値は整数値に四捨五入されます。
このメソッドが役に立つのは描画記号に正確なピクセル値を設定したい場合などで、アンチエイリアスによるぼやけた輪郭描画が回避できます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;・d3.scale.linear().clamp(true)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デフォルトでは線形スケールは出力レンジ外の数値を返すこともあります。
たとえば、入力ドメイン外の数値が与えられたとき、スケールは出力レンジ外に出力します。
しかしこの関数.clamp(true)を使うと、全ての出力値は設定した出力レンジに収まります。
この場合出力レンジ外の出力値はレンジの最大値もしくは最小値に丸められます。&lt;/p&gt;

&lt;h3&gt;他のスケール&lt;/h3&gt;

&lt;p&gt;linearスケール以外にもD3はいろんな組み込みメソッドを持ちます。
・identityスケール：入力と出力の比が1:1のスケール。おもにピクセル座標を求めたい時に役だちます。
・sqrt(平方根)スケール
・pow(累乗)スケール
・log(対数)スケール
・quantize(量子)スケール:線形スケールの一種であり、出力レンジが離散値となるケース。
・quantile（分位）スケール：量子スケールと似ているが、入力ドメインに任意の離散値をマップできます。
・ordinal（序数）スケール：出力レンジとして量的でない値を使います。リンゴとオレンジを比較する場合に最適です。&lt;/p&gt;

&lt;h2&gt;軸&lt;/h2&gt;

&lt;p&gt;前の散布図では、位置情報をTextで座標表示(x,y)していました。
本章では、その位置情報ラベルを軸で表現してみましょう。&lt;/p&gt;

&lt;h3&gt;軸の導入&lt;/h3&gt;

&lt;p&gt;スケール関数とまったく同様に、D3の軸の実体は関数であり、自分でパラメータを定義して使います。
スケールと違うのは、軸関数は呼ばれたときに値を返すのではなく、線やラベル、目盛りなどからなる「軸」という
視覚要素を生成する点です。&lt;/p&gt;

&lt;p&gt;軸関数はSVG要素を生成するSVG専用の関数です。また軸関数が扱えるのは量的スケールのみです。
ordinal(序数)スケールには対応していません。&lt;/p&gt;

&lt;h3&gt;軸のセットアップ&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;軸を作成します
var xaxis = d3.svg.axis();
軸関数にはスケールを適用します。
xaxis.scale(xscale);
軸から見てどの位置にラベルを表示するか？
xaxis.orient(&quot;bottom&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;.axis path,
.axis line {
  fill: none;
  stroke: black;
  shape-rendering: crispEdges;   //アンチエイリアス無効
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;.axis text {
  font-family: sans-serif;
  font-size: 11px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;var xaxis= d3.svg.axis().scale(xscale).orient(&quot;bottom&quot;).ticks(5);        //ticksは目盛りのおおざっぱな個数
var yaxis= d3.svg.axis().scale(yscale).orient(&quot;left&quot;).ticks(5);        //ticksは目盛りのおおざっぱな個数
svg.append(&quot;g&quot;)
  .attr(&quot;class&quot;, &quot;axis&quot;)
  .attr(&quot;transform&quot;, &quot;translate(0,&quot; + (h - padding) + &quot;)&quot;)
  .call(xaxis);                                                //group要素gを新規作成し、xaxisに渡す。つまりgの中にxaxisが出来る。
svg.append(&quot;g&quot;)
  .attr(&quot;class&quot;, &quot;axis&quot;)
  .attr(&quot;transform&quot;, &quot;translate(&quot;+padding+&quot;,0)&quot;)
  .call(yaxis);                                                //group要素gを新規作成し、xaxisに渡す。つまりgの中にxaxisが出来る。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;便利なフォーマット関数もd3は持っています。&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;var formatAsPercentage = d3.format(&quot;.1%&quot;);
tickFormat() メソッドを用いて目盛りをフォーマットします。
xAxis.tickFormat(formatAsPercentage);
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;軸やスケールを踏まえた最終形SVGを下記に示します。&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;var dataset = [];
var numDataPoints = 50;
var xRange = Math.random() * 1000;
var yRange = Math.random() * 1000;
for (var i = 0; i &amp;lt; numDataPoints; i++) {
  var newNumber1 = Math.round(Math.random() * xRange);
  var newNumber2 = Math.round(Math.random() * yRange);
  var newNumber3 = Math.round(Math.random() * 100);
  dataset.push([newNumber1, newNumber2, newNumber3]);
}
var w = 500;
var h = 100;
var padding = 30; //margin. この値を設定し左端と右端の余白を作る。range側(出力側)で適用されるので、悪影響はない。
var xscale = d3.scale.linear().domain([0, d3.max(dataset, function(d){return d[0];}) ]).range([padding, w-padding*2]);
var yscale = d3.scale.linear().domain([0, d3.max(dataset, function(d){return d[1];}) ]).range([h-padding, padding]);  //rangeを反転させ、Y軸上下反転
var rscale = d3.scale.linear().domain([0, d3.max(dataset, function(d){return d[2];}) ]).range([2,6]);  //※重要:値がどんなに膨らもうと、最大6px以内に収まる。
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;var svg = d3.select(&quot;body&quot;).append(&quot;svg&quot;).attr(&quot;width&quot;, w).attr(&quot;height&quot;, h);
svg.selectAll(&quot;circle&quot;).data(dataset).enter().append(&quot;circle&quot;).attr(&quot;cx&quot;, function(d) { return xscale(d[0]);}).attr(&quot;cy&quot;, function(d){ return yscale(d[1]);})
.attr(&quot;r&quot;, function(d){return rscale(d[2]);});
svg.selectAll(&quot;text&quot;).data(dataset).enter().append(&quot;text&quot;).text(function(d){ return d[2];})
.attr(&quot;x&quot;, function(d){ return xscale(d[0]);}).attr(&quot;y&quot;, function(d){ return yscale(d[1]);}).attr(&quot;font-family&quot;, &quot;sans-serif&quot;)
.attr(&quot;font-size&quot;, &quot;11px&quot;).attr(&quot;fill&quot;, &quot;red&quot;);
var xaxis= d3.svg.axis().scale(xscale).orient(&quot;bottom&quot;).ticks(5);        //ticksは目盛りのおおざっぱな個数
var yaxis= d3.svg.axis().scale(yscale).orient(&quot;left&quot;).ticks(5);        
svg.append(&quot;g&quot;)
  .attr(&quot;class&quot;, &quot;axis&quot;)
  .attr(&quot;transform&quot;, &quot;translate(0,&quot; + (h - padding) + &quot;)&quot;)
  .call(xaxis);                                                         //group要素gを新規作成し、xaxisに渡す。つまりgの中にxaxisが出来る。
svg.append(&quot;g&quot;)
  .attr(&quot;class&quot;, &quot;axis&quot;)
  .attr(&quot;transform&quot;, &quot;translate(&quot;+padding+&quot;,0)&quot;)
  .call(yaxis);   
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;要素の削除例&lt;/h2&gt;

&lt;p&gt;d3.select(&quot;body&quot;).selectAll(&quot;svg&quot;).remove();&lt;/p&gt;

&lt;h2&gt;地図を書く例&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;var path, map, xy;
xy = d3.geo
.mercator()     //投影法の指定
.scale(16000)  //スケール（ズーム）の指定
.center([139.0032936, 36.3219088]); //中心の座標を指定
path = d3.geo.path().projection(xy); //投影
map = d3.select(&quot;body&quot;).append(&quot;svg:svg&quot;).attr(&quot;width&quot;, 960).attr(&quot;height&quot;, 600); //地図用のステージ(SVGタグ)を作成
var gunma = d3.json(&quot;ttp://shimz.me/example/d3js/geo_example/geo2/gunma.geojson&quot;, function(json) {
  return map.append(&quot;svg:g&quot;)
           .attr(&quot;class&quot;, &quot;gunma&quot;)
           .selectAll(&quot;path&quot;)
           .data(json.features)
           .enter()
           .append(&quot;svg:path&quot;)
           .attr(&quot;d&quot;, path)  //dataに投影法を適応
           .attr(&quot;fill-opacity&quot;, 0.5)
           .attr(&quot;fill&quot;, &quot;green&quot;)
           .attr(&quot;stroke&quot;, &quot;#222&quot;)
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2014/03/markdown-basic</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2014/03/markdown-basic" />
    <title>Markdown Basic</title>
    <updated>2014-03-06T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;hr /&gt;

&lt;h1&gt;markdown考察&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2&gt;強調表現&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;
&lt;strong&gt;太字&lt;/strong&gt;
&lt;strong&gt;&lt;em&gt;太字かつ斜体&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;見出し表現&lt;/h2&gt;

&lt;h1&gt;大見出し&lt;/h1&gt;

&lt;h2&gt;中見出し&lt;/h2&gt;

&lt;h3&gt;小見出し&lt;/h3&gt;

&lt;h2&gt;リスト(通常）&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;弾丸リスト1行&lt;/li&gt;
&lt;li&gt;弾丸リスト2行&lt;/li&gt;
&lt;li&gt;数字リスト1行&lt;/li&gt;
&lt;li&gt;数字リスト2行&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;リスト(インデックス付き:ネスト表現)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;トップレベル弾丸1行目

&lt;ul&gt;
&lt;li&gt;サブレベル弾丸1行目&lt;/li&gt;
&lt;li&gt;サブレベル弾丸2行目&lt;/li&gt;
&lt;li&gt;(数字リストも同様に利用可能です)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;引用&lt;/h2&gt;

&lt;p&gt;1行目につければその次行も引用となります
複数行あっても
引用とみなされます。&lt;/p&gt;

&lt;p&gt;引用記号はそれぞれの行頭につけても
引用とみなされます。&lt;/p&gt;

&lt;h2&gt;リンク(aタグ)&lt;/h2&gt;

&lt;p&gt;文章の中の&lt;a href=&quot;http://hogehoge.com/&quot; title=&quot;Alt:別名ツールチップ文字列&quot;&gt;サンプルリンク&lt;/a&gt; です。
直接URLを表示したければ &lt;a href=&quot;http://hogehoge.com/&quot;&gt;http://hogehoge.com/&lt;/a&gt;とするとよい。&lt;/p&gt;

&lt;h2&gt;画像表示(imgタグ)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://hoge.com/myimage.png&quot; title=&quot;alt:別名ツールチップ文字列&quot; alt=&quot;画像リンク切れの時に表示する文字列&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;水平線(↓は全部HRとなる。)&lt;/h2&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2&gt;コードを張り付ける場合&lt;/h2&gt;

&lt;p&gt;(空行)
&lt;code&gt;python:index.py
  print &#39;hello py world.&#39;
&lt;/code&gt;
(空行)&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;print &#39;hello py world&#39;&lt;/code&gt;という1行表記もOK。&lt;/p&gt;

&lt;h2&gt;テーブル&lt;/h2&gt;

&lt;p&gt;|Left align | Right Align | Center align|
|:----------|------------:|:-----------:|&lt;/p&gt;

&lt;h2&gt;TeX記法による数式&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;math&quot;&gt;TEXをここに
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;markdown無効化&lt;/h2&gt;

&lt;p&gt;「￥」バックスラッシュで無効化できます&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2013/05/hwave_ecoral.js</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2013/05/hwave_ecoral.js" />
    <title>ecoral.js ver 1.0..</title>
    <updated>2013-05-14T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;p&gt;There is a sample page to use ecoral.js. most of which I use on a regular basis.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ikarosu.net/hw/ecoral_sample.html&quot;&gt;ecoral.js sample&lt;/a&gt; for estimating the eco cost.&lt;/li&gt;
&lt;li&gt;[download from Github] (https://github.com/nabsan/hwave.git)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you have any questions or suggestion, please feel free to ask.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2012/11/fixing-a-tmva-error</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2012/11/fixing-a-tmva-error" />
    <title>Fixing a TMVA Error</title>
    <updated>2012-11-02T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;p&gt;If you&#39;re using the multivariate analysis package &lt;a href=&quot;http://tmva.sourceforge.net&quot;&gt;TMVA&lt;/a&gt; and are running in to the following error on training or testing:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;--- &amp;lt;FATAL&amp;gt; Tools: &amp;lt;GetSeparation&amp;gt; signal and background histograms have different or invalid dimensions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It might be failing because you&#39;re giving it one or more &lt;a href=&quot;http://en.wikipedia.org/wiki/Not_a_Number&quot;&gt;&lt;code&gt;NaN&lt;/code&gt; values&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By default, TMVA selects its training and testing data randomly from the input data. It will do this in a repeatable fashion unless you give &lt;code&gt;0&lt;/code&gt; as the value to the &lt;code&gt;RandomSeed&lt;/code&gt; option in the splitting options, so you may either get this error each time you run TMVA or just occasionally.&lt;/p&gt;

&lt;p&gt;After a couple weeks of working around the issue, I discovered that I had a single event (a &lt;em&gt;single&lt;/em&gt; event, mind you!) with a negative value for a particular variable, which I gave the log of to TMVA. In C++, the logarithm of a negative number is represented as a &lt;code&gt;NaN&lt;/code&gt; value, and it was this which was causing the error.&lt;/p&gt;

&lt;p&gt;You can either apply a cut to the input data:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;factory-&amp;gt;PrepareTrainingAndTestTree(&amp;quot;troublesome_var &amp;gt; 0&amp;quot;, &amp;quot;troublesome_var &amp;gt; 0&amp;quot;, splitOptions);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or make sure that the events with bad values aren&#39;t present in your input data.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://tmva.sourceforge.net/docu/TMVAUsersGuide.pdf&quot;&gt;TMVA user&#39;s guide&lt;/a&gt; documents the &lt;code&gt;PrepareTrainingAndTestTree&lt;/code&gt; method, amongst other things.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2012/10/merging-root-ntuples</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2012/10/merging-root-ntuples" />
    <title>Merging ROOT Ntuples</title>
    <updated>2012-10-28T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;p&gt;You have multiple &lt;code&gt;.root&lt;/code&gt; files containing ntuples and wish to merge them in to one. For example, you have 3 files called &lt;code&gt;ntuple.0.root&lt;/code&gt;, &lt;code&gt;ntuple.1.root&lt;/code&gt;, and &lt;code&gt;ntuple.2.root&lt;/code&gt;. The structure of each is identical, for instance:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;ntuple.X.root:
  DecayModeOne
    DecayTree
  DecayModeTwo
    DecayTree
  GetIntegratedLuminosity
    LumiTuple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, the indentation represents the folder structure, and the deepest elements (&lt;code&gt;DecayTree&lt;/code&gt;, &lt;code&gt;LumiTuple&lt;/code&gt;) are &lt;code&gt;TTree&lt;/code&gt; objects.&lt;/p&gt;

&lt;p&gt;To merge these files, use the &lt;code&gt;hadd&lt;/code&gt; command (found in &lt;code&gt;$ROOTSYS/bin&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hadd ntuple.root ntuple.0.root ntuple.1.root ntuple.2.root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first argument is the desired output ntuple, the remaing arguments are the files to be merged.&lt;/p&gt;

&lt;p&gt;This will produce the following output when using the example structure above:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;hadd Target file: ntuple.root
hadd Source file 1: ntuple.0.root
hadd Source file 2: ntuple.1.root
hadd Source file 3: ntuple.2.root
hadd Target path: ntuple.root:/
hadd Target path: ntuple.root:/DecayModeOne
hadd Target path: ntuple.root:/DecayModeTwo
hadd Target path: ntuple.root:/GetIntegratedLuminosity
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This can will take some time if you&#39;re merging lots of data (it took me around 40 minutes to merge 120 ntuples with a total size of 20GB).&lt;/p&gt;

&lt;h2&gt;A Nicer Way&lt;/h2&gt;

&lt;p&gt;If you&#39;re using a bash-like shell (&lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;zsh&lt;/code&gt;), then there is an even nicer way of doing things:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hadd ntuple.root ntuple.&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;0..2&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;{0..2}&lt;/code&gt; part is expanded by the shell to &lt;code&gt;ntuple.0.root ntuple.1.root ntuple.2.root&lt;/code&gt;. If you&#39;re not a regular bash/zsh user, you can still take advantage of the feature by executing&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;in your shell and then&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;once you&#39;re done. Note that this new shell may not have &lt;code&gt;$ROOTSYS/bin&lt;/code&gt; in its &lt;code&gt;PATH&lt;/code&gt;, but can be quickly added.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/path/to/root/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2012/06/setting-up-a-vps</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2012/06/setting-up-a-vps" />
    <title>Setting Up an Ubuntu VPS With rbenv, Nginx and Passenger</title>
    <updated>2012-06-19T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;p&gt;Every once in a while I buy a new VPS, mostly because I&#39;m not entirely satisfied with my current setup. My stack of choice is usually &lt;a href=&quot;https://rvm.io/&quot;&gt;RVM&lt;/a&gt; for Ruby management, the &lt;a href=&quot;http://httpd.apache.org/&quot;&gt;Apache web server&lt;/a&gt;, &lt;a href=&quot;http://www.modrails.com/&quot;&gt;Passenger&lt;/a&gt; for allowing Apache to run Ruby apps like Rails and Sinatra, and &lt;a href=&quot;http://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt; for the database.&lt;/p&gt;

&lt;p&gt;This time around I decided to use some other software that seems to be popular with the community.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the webserver I chose &lt;a href=&quot;http://nginx.org&quot;&gt;nginx&lt;/a&gt;. There are many &lt;a href=&quot;http://www.wikivs.com/wiki/Apache_vs_nginx&quot;&gt;comparisons&lt;/a&gt; of Apache and nginx, but for such a small-scale server as mine it really boiled down to curiosity.&lt;/li&gt;
&lt;li&gt;RVM has received &lt;a href=&quot;http://rakeroutes.com/blog/how-to-use-bundler-instead-of-rvm-gemsets/&quot;&gt;some flack&lt;/a&gt;, principally because of &lt;a href=&quot;http://gembundler.com/&quot;&gt;Bundler&#39;s&lt;/a&gt; ability to manage &quot;gemsets&quot; with Gemfiles. I went with &lt;a href=&quot;https://github.com/sstephenson/rbenv&quot;&gt;rbenv&lt;/a&gt; to &lt;a href=&quot;http://shapeshed.com/using-rbenv-to-manage-rubies/&quot;&gt;manage my rubies&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I stuck with Passenger for allowing the web server to run Ruby apps. Although other solutions exist, like &lt;a href=&quot;http://unicorn.bogomips.org/&quot;&gt;Unicorn&lt;/a&gt; and &lt;a href=&quot;http://code.macournoyer.com/thin/&quot;&gt;Thin&lt;/a&gt;, the configuration required was a little too much for me.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; is a popular choice these days. If it&#39;s good enough for &lt;a href=&quot;http://railscasts.com/&quot;&gt;Ryan Bates&lt;/a&gt; then it&#39;s good enough for me!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now that the stack&#39;s chosen, it&#39;s just a case of setting it all up.&lt;/p&gt;

&lt;h2&gt;Setting Up Ubuntu&lt;/h2&gt;

&lt;p&gt;In this section all commands are executed as the &lt;code&gt;root&lt;/code&gt; user, as when you log in to a fresh install. If you&#39;ve already got a user set up, prefix all the commands in this section with &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I chose &lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt; as my Linux distribution of choice. The lastest Ubuntu image provided by my VPS host was 11.04, so first I had to update Ubuntu to the latest LTS, 12.04. First, make sure we&#39;re up-to-date.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get -y update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get -y upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;-y&lt;/code&gt; flag assumes a &#39;yes&#39; response for all prompts. Next, as there&#39;s no direct upgrade route from 11.04 to 12.04, we need to go via 11.10.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get install update-manager-core
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;-release-upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Confirm that you want to perform the upgrade, and once that&#39;s finished and the VPS restarted (&lt;code&gt;reboot&lt;/code&gt;) Ubuntu will be at 11.10. You can check this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lsb_release -a
...
Release:        11.10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Perform &lt;code&gt;do-release-upgrade&lt;/code&gt; again to arrive at 12.04 LTS.&lt;/p&gt;

&lt;p&gt;For a basic setting up of our VPS, the Slicehost article on &lt;a href=&quot;http://articles.slicehost.com/2010/4/30/ubuntu-lucid-setup-part-1&quot;&gt;setting up Ubuntu&lt;/a&gt; is great. In particular, make sure to set up the &lt;code&gt;wheel&lt;/code&gt; admin group and get &lt;code&gt;iptables&lt;/code&gt; set up. We&#39;ll add a user to the &lt;code&gt;wheel&lt;/code&gt; group later.&lt;/p&gt;

&lt;p&gt;Once that&#39;s done, we have a non-&lt;code&gt;root&lt;/code&gt; user with which to log in to the VPS. Log in as that user from your local machine.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh user@12.345.23.91

Welcome to Ubuntu 12.04 LTS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GNU/Linux 2.6.38-8-generic x86_64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a user to deploy with and add her to the &lt;code&gt;wheel&lt;/code&gt; group.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo useradd -G wheel deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where &lt;code&gt;deploy&lt;/code&gt; is the username of our new user. Finally, we&#39;ll install a few dependencies for later.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get -y install curl git-core python-software-properties build-essential zlib1g-dev libssl-dev libreadline-gplv2-dev libcurl4-openssl-dev 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Installing the Components&lt;/h1&gt;

&lt;p&gt;We have four main components to install: Ruby, PostgreSQL, Passenger, and nginx. We&#39;ll install them in that order, as Passenger comes with a handy command that installs nginx from source for us.&lt;/p&gt;

&lt;p&gt;To install Ruby we&#39;ll install &lt;a href=&quot;https://github.com/sstephenson/rbenv&quot;&gt;rbenv&lt;/a&gt;, which allows us to manage multiple rubies on the same machine. As &lt;code&gt;deploy&lt;/code&gt; will be deploying the apps, we need her to have access to the rubies. Assume access as &lt;code&gt;deploy&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su - deploy
Password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And install rbenv using the handy &lt;a href=&quot;https://raw.github.com/fesplugas/rbenv-installer/&quot;&gt;rbenv installer&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl https://raw.github.com/fesplugas/rbenv-installer/master/bin/rbenv-installer &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the snippet the installer gives you to your &lt;code&gt;.bashrc&lt;/code&gt; and source the file in the shell.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nano .bashrc &lt;span class=&quot;c&quot;&gt;# or any other editor&lt;/span&gt;
...
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;. .bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make sure we&#39;ve got all the dependencies required for installing Ruby from source, run &lt;code&gt;rbenv bootstrap-ubuntu-12-04&lt;/code&gt;. We&#39;ll install the latest version which is, at the time of writing, 1.9.3 patch 194.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv install 1.9.3-p194
...
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv global 1.9.3-p194
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last command makes &lt;code&gt;1.9.3-p194&lt;/code&gt; the global, default version of Ruby. You can check the Ruby version with &lt;code&gt;ruby -v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we have Ruby, we can install Passenger as a gem and then &lt;a href=&quot;https://github.com/sstephenson/rbenv#section_3.6&quot;&gt;refresh rbenv&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install passenger
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv rehash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we install nginx.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo passenger-install-nginx-module
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The installer will figure out if all the dependencies are preset. If they&#39;re not, it&#39;ll give you a snippet with which to install them. Choose option 1 to let Passenger download, configure, and compile nginx. The default installation directory &lt;code&gt;/opt/nginx&lt;/code&gt; is fine, but some people prefer the more familiar Apache-like directory &lt;code&gt;/etc/nginx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once that&#39;s installed, we&#39;ll get a script for nginx that allows us to use the &lt;code&gt;service&lt;/code&gt; command, so we can do stuff like &lt;code&gt;sudo service nginx restart&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo curl https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cat &amp;gt;&amp;gt; /etc/init.d/nginx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo chmod +x /etc/init.d/nginx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo /usr/sbin/update-rc.d -f nginx defaults
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We&#39;ll also replace the default nginx configuration with a leaner one. Download the &lt;a href=&quot;https://github.com/alexpearce/templates/blob/master/nginx.conf&quot;&gt;simple config file&lt;/a&gt; and replace the current one (backing up first, of course).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl https://raw.github.com/alexpearce/templates/master/nginx.conf &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cat &amp;gt;&amp;gt; nginx.conf
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo mv /opt/nginx/conf/nginx.conf /opt/nginx/conf/nginx.conf.old &lt;span class=&quot;c&quot;&gt;# back up&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo mv ./nginx.conf /opt/nginx/conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that this new configuration file &lt;code&gt;include&lt;/code&gt;s files from &lt;code&gt;/opt/nginx/sites-available&lt;/code&gt;. This is similar to how many people set up &lt;a href=&quot;http://www.debianhelp.co.uk/virtualhosts.htm&quot;&gt;Apache with virtual hosts&lt;/a&gt;. For each site we want (generally represented as a (sub)domain or set of (sub)domains) we create a file inside &lt;code&gt;sites-enabled&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you installed nginx to a different directory, such as &lt;code&gt;/etc/nginx&lt;/code&gt;, modify the &lt;code&gt;nginx&lt;/code&gt; init.d and &lt;code&gt;nginx.conf&lt;/code&gt; file to point to the right places. Check everything&#39;s working by restarting nginx.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo service nginx restart
* Stopping Nginx Server...
  ...done.
* Starting Nginx Server...
  ...done.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can double-check nginx is working by visiting our VPS IP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/setting-up-a-vps/nginx-success.png&quot; alt=&quot;A successful nginx installation.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great! Now we have all we need to run Ruby apps. With something like Rails we need one one more thing though: a database. The version of PostgreSQL in the Ubuntu repository is a little outdated, so we&#39;ll install it from an up-to-date &lt;a href=&quot;http://www.makeuseof.com/tag/ubuntu-ppa-technology-explained/&quot;&gt;PPA&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo add-apt-repository ppa:pitti/postgresql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo install postgresql libpq-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;libpq-dev&lt;/code&gt; is a dependency of the &lt;code&gt;pg&lt;/code&gt; gem, which Rails will need to talk to the database. Now that PostgreSQL is installed, we&#39;ll change the root password and set up a test user.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pqsql

&lt;span class=&quot;nv&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# \password&lt;/span&gt;
Enter new password:
...
&lt;span class=&quot;nv&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# create user test with password &amp;#39;secret&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# create database test_production owner test;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# \q&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Good, that&#39;s everything for now. Let&#39;s try getting a Rails app up and running!&lt;/p&gt;

&lt;h2&gt;Testing&lt;/h2&gt;

&lt;p&gt;We&#39;ll get a fresh Rails app going &lt;em&gt;as the deploying user&lt;/em&gt;, so make sure you&#39;re logged in as &lt;code&gt;deploy&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su - deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We want each app to have its own set of gems. Using Bundler, we can do this easily &lt;a href=&quot;http://stackoverflow.com/questions/9771172/rbenv-surviving-without-gemsets/9791080#9791080&quot;&gt;with a Gemfile&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir testapp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;testapp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s1&quot;&gt;&amp;#39;source :rubygems\n\ngem &amp;quot;rails&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; Gemfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We now have a Gemfile which Bundler can work with. We now install the &lt;code&gt;bundler&lt;/code&gt; gem, install the stuff in our Gemfile to &lt;code&gt;vendor/bundle&lt;/code&gt; (which will act as our app-specific gemset) and create the Rails test app.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install bundler
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv rehash
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install --path vendor/bundle
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails new . -d postgresql 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Choose &lt;code&gt;Y&lt;/code&gt; to overwrite our Gemfile with the Rails template. Now, install the rest of the Rails dependencies.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install
...
Your bundle is &lt;span class=&quot;nb&quot;&gt;complete&lt;/span&gt;! It was installed into ./vendor/bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make sure Rails can talk to the database, edit &lt;code&gt;database.yml&lt;/code&gt; with the test PostgreSQL user and database details.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nano config/database.yml
...
production:
  adapter: postgresql
  encoding: unicode
  database: test_production
  pool: 5
  host: localhost
  username: &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;password: secret
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;host: localhost&lt;/code&gt; is particularly important (and not in the default Rails &lt;code&gt;database.yml&lt;/code&gt;); my app wouldn&#39;t work without it.&lt;/p&gt;

&lt;p&gt;Now we just need to tell nginx where our Rails app is. As I mentioned earlier, we&#39;ve set up nginx so that each site has its own config file inside &lt;code&gt;nginx/sites-enabled&lt;/code&gt;. I&#39;ve uploaded a &lt;a href=&quot;https://github.com/alexpearce/templates/blob/master/nginx.app.conf&quot;&gt;test app config file&lt;/a&gt; on GitHub. We just download this to this nginx directory and &lt;strong&gt;edit it&lt;/strong&gt; so that it points to the right place.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl https://raw.github.com/alexpearce/templates/master/nginx.server.conf &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cat &amp;gt;&amp;gt; testapp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nano testapp
... &lt;span class=&quot;c&quot;&gt;# edit the config file so that it points to our app&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo mv testapp /opt/nginx/sites-enabled/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Visiting the VPS IP, it works!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/setting-up-a-vps/rails-success.png&quot; alt=&quot;A successful Rails installation.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Excellent. We&#39;ve set up a VPS from scratch to serve Ruby applications, installing rbenv, Passenger, nginx, and PostgreSQL. If you&#39;d like to test the Rails app a little further, delete &lt;code&gt;index.html&lt;/code&gt; in the &lt;code&gt;public&lt;/code&gt; directory and scaffold some models. Create, update, and delete a few records to make sure the database is OK.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Inside the ~deploy/testapp directory&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm public/index.html
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails g scaffold post title body:text
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch tmp/restart.txt &lt;span class=&quot;c&quot;&gt;# this tells passenger to restart the app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That&#39;s all for now, next we&#39;ll go over deploying from a local machine to the VPS with &lt;a href=&quot;https://github.com/capistrano/capistrano&quot;&gt;Capistrano&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <id>http://nabsan.github.io/html/2012/04/scattering-cross-sections</id>
    <link type="text/html" rel="alternate" href="http://nabsan.github.io/2012/04/scattering-cross-sections" />
    <title>Scattering Cross Sections in the Standard Model</title>
    <updated>2012-04-28T00:00:00+09:00</updated>
    <author>
      <name>Nabsan</name>
      <email>nabsan@ikarosu.net</email>
    </author>
    <content type="html">&lt;p&gt;As part of my degree I&#39;m taking a computing course which requires two project reports. The first was on e+e− &amp;rarr; &amp;mu;+&amp;mu;− scattering, mediated via the photon and the Z boson.&lt;/p&gt;

&lt;p&gt;I wrote the report in LaTeX, with the main program being written in Python. As an extension, I rewrote the bulk of the Python script in C in order to compare the relative performance of the two languages.&lt;/p&gt;

&lt;p&gt;I&#39;ve open-sourced the entire project, which you can &lt;a href=&quot;https://github.com/alexpearce/eeuu-scattering&quot;&gt;view on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Compiling&lt;/h2&gt;

&lt;p&gt;The C script should compile on just about any system with &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;gcc&lt;/a&gt; using&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gcc -Wall cross_section.c -o cross_section
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; The LaTeX document has a few dependencies.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;atlasphysics&lt;/code&gt; which is bundled in the repository.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feynmp&lt;/code&gt; is found &lt;a href=&quot;http://www.ctan.org/tex-archive/macros/latex/contrib/feynmf&quot;&gt;here&lt;/a&gt;. There&#39;s a nice guide to &lt;a href=&quot;http://osksn2.hep.sci.osaka-u.ac.jp/~taku/osx/feynmp.html&quot;&gt;installing &lt;code&gt;feynmp&lt;/code&gt; on OS X here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Standard packages such as &lt;code&gt;amsmath&lt;/code&gt;, &lt;code&gt;graphicx&lt;/code&gt;, &lt;code&gt;subfig&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt;. I use the &lt;a href=&quot;http://www.tug.org/mactex/2011/&quot;&gt;MacTex&lt;/a&gt; distribution for OS X, which ships with these packages by default.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;You can view the &lt;a href=&quot;https://github.com/downloads/alexpearce/eeuu-scattering/Report.pdf&quot;&gt;final compiled report on GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  

</feed>
